#!/bin/bash

# üõë Script para parar todos os servi√ßos

echo "üõë Parando todos os servi√ßos..."
echo ""

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# 1. Parar t√∫nel Cloudflare
if [ -f tunnel.pid ]; then
    TUNNEL_PID=$(cat tunnel.pid)
    if ps -p $TUNNEL_PID > /dev/null 2>&1; then
        echo "üåê Parando Cloudflare Tunnel (PID: $TUNNEL_PID)..."
        kill $TUNNEL_PID
        rm tunnel.pid
        echo -e "${GREEN}‚úÖ T√∫nel parado${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  T√∫nel j√° estava parado${NC}"
        rm tunnel.pid
    fi
else
    # Tentar parar qualquer cloudflared rodando
    if pgrep -f cloudflared > /dev/null; then
        echo "üåê Parando Cloudflare Tunnel..."
        pkill -f cloudflared
        echo -e "${GREEN}‚úÖ T√∫nel parado${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Nenhum t√∫nel rodando${NC}"
    fi
fi
echo ""

# 2. Parar backend (NestJS)
echo "üîß Parando backend..."
if pgrep -f "nest start" > /dev/null || pgrep -f "ts-node.*main.ts" > /dev/null; then
    pkill -f "nest start"
    pkill -f "ts-node.*main.ts"
    echo -e "${GREEN}‚úÖ Backend parado${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Backend j√° estava parado${NC}"
fi
echo ""

# 3. Parar frontend (Next.js)
echo "üé® Parando frontend..."
if pgrep -f "next dev" > /dev/null; then
    pkill -f "next dev"
    echo -e "${GREEN}‚úÖ Frontend parado${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Frontend j√° estava parado${NC}"
fi
echo ""

# 4. Opcional: Parar Docker
read -p "Parar Docker tamb√©m? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üì¶ Parando Docker..."
    docker compose down
    echo -e "${GREEN}‚úÖ Docker parado${NC}"
fi
echo ""

echo -e "${GREEN}‚úÖ Todos os servi√ßos foram parados!${NC}"
